# Control Plane GitHub Action
name: 01-Deploy-To-Review

on: [push]
# on:
#   pull_request:
#     types:
#     - opened
#     - synchronize
#     branches:
#     - main
#     paths-ignore:
#     - ".github/workflows/**"

# Convert the GitHub secret variables to environment variables for use by the Control Plane CLI
env:
  CPLN_ORG: ${{secrets.CPLN_ORG_DEVELOPMENT}}
  CPLN_GVC: ${{secrets.CPLN_GVC}}
  CPLN_WORKLOAD: ${{secrets.CPLN_WORKLOAD}}
  CPLN_TOKEN: ${{secrets.CPLN_TOKEN_DEVELOPMENT}}
  CPLN_IMAGE: ${{secrets.CPLN_IMAGE}}
  GITHUB_HEAD_REF: ${{ github.ref_name }}
  DATE: ${{ github.event.repository.updated_at}}
  RELEASE_TYPE: "nightly-release"

jobs:

  deploy-to-review:

    runs-on: ubuntu-latest
    steps:

    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Execute Release Tasks
      shell: bash
      run: ./release/review/release-tasks.sh

    - name: Set Short SHA
      run: |
        echo "SHORT_SHA=`echo ${GITHUB_SHA::7} | cut -c1-7`" >> $GITHUB_ENV
        echo "SHA: ${GITHUB_SHA}. GITHUB_SHA::7: ${GITHUB_SHA::7}. SHORT_SHA: ${SHORT_SHA}"

    - name: Normalize Branch Name
      run: |
        echo "PREVIEW_NAME=`echo ${{ env.GITHUB_HEAD_REF }} | tr '/' '-'`" >> $GITHUB_ENV
        echo "PREVIEW_NAME: ${PREVIEW_NAME}. GITHUB_HEAD_REF: ${GITHUB_HEAD_REF}"
        echo "SHA: ${GITHUB_SHA}. GITHUB_SHA::7: ${GITHUB_SHA::7}. SHORT_SHA: ${SHORT_SHA}"

    - name: Get current date
      id: date
      run: |
        echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Execute Debug Output (Stage 1)
      shell: bash
      run: ./debug.sh

    - name: Substitute Tokens in Control Plane YAML Files
      shell: bash
      env:
        BUILD_VERSION: ${SHORT_SHA}
        RELEASE_NAME: nightly-release:${{ steps.date.outputs.date }}
      working-directory: ./cpln
      run: |
        sed -i "s/GVC_NAME/${CPLN_GVC}/" cpln-gvc.yaml
        sed -i "s/WORKLOAD_NAME/${PREVIEW_NAME}-review-${CPLN_WORKLOAD}/" cpln-workload.yaml
        sed -i "s/IMAGE_NAME_TAG/\/\/image\/${CPLN_IMAGE}-${RELEASE_NAME}/" cpln-workload.yaml
        echo "CPLN_IMAGE: ${CPLN_IMAGE}. RELEASE_NAME: ${RELEASE_NAME}. BUILD_VERSION: ${BUILD_VERSION}"

    - name: Execute Debug Output (Prior to Run CPLN Apply)
      shell: bash
      run: ./debug.sh

    - name: Install Control Plane CLI and Authenticate
      shell: bash
      run: |
        sudo npm install -g @controlplane/cli
        cpln --version
        cpln profile update default --token ${CPLN_TOKEN}
        # echo "SHA: ${GITHUB_SHA}. Short SHA: ${GITHUB_SHA::7}"

    - name: Containerize application and push image
      shell: bash
      run: |
        cpln image docker-login
        cpln image build --name ${CPLN_IMAGE}-${RELEASE_NAME} --dockerfile ./Dockerfile --push

    - name: Run CPLN Apply
      shell: bash
      working-directory: ./cpln
      run: |
        cpln apply -f cpln-gvc.yaml
        cpln apply -f cpln-workload.yaml --gvc ${CPLN_GVC}
